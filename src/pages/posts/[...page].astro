---
// Component Imports
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import PostPreview from "../../components/PostPreview.astro";
import { getPosts } from "../../util/getPosts.ts";

export async function getStaticPaths({ paginate, rss }) {
    // Load your data with fetch(), Astro.fetchContent(), etc.
    const allPosts = await getPosts(Astro.fetchContent('./*.md'))
    // Return a paginated collection of paths for all posts
    const pagination = paginate(allPosts, { pageSize: 10 });

    rss({
        // The RSS Feed title, description, and custom metadata.
        title: "Helgesson.dev",
        description: "An example blog on Astro",
        customData: `<language>en-us</language>`,
        // The list of items for your RSS feed, sorted.
        items: allPosts.map((post) => ({
            title: post.title,
            description: post.name,
            link: post.url,
            pubDate: new Date(post.publishDate).toString(),
        })),
    });
    return [...pagination];
}
// If set up correctly, The page prop now has everything that
// you need to render a single page (see next section).
const { page } = Astro.props;

let title = "Helgesson.Dev";
let description = "The perfect starter for your perfect blog.";
let permalink = "https://helgesson.dev/";
---

<html lang="en" theme="dark">
    <head>
        <!-- @ts-ignore -->
        <BaseHead {title} {description} {permalink} />
        <link rel="stylesheet" href={Astro.resolve("../../styles/global.css")} />

        <style>
            .wrapper {
                margin: 0 1rem;
            }

            .posts {
                display: flex;
                flex-wrap: wrap;
                gap: 1rem;
                flex-direction: column;
                width: 100%;
                align-items: center;

                padding-top: 2rem
            }

            @media (min-width: 768px) {
                .posts {
                    gap: 2rem;
                }
            }
        </style>
    </head>

    <body>
        <Header />
        <div class="wrapper">
            <main class="content">
                <!-- <section class="intro">
                    <h1 class="latest">{title}</h1>
                    <p>{description}</p>
                </section> -->
                <section class="posts" aria-label="Blog post list">
                    {page.data.map(post => (
                        <PostPreview {post} />
                    ))}
                </section>

                    {page.url.prev && <a href={page.url.prev}>Prev</a>}
                    {page.url.next && <a href={page.url.next}>Next</a>}
            </main>
        </div>
    </body>
</html>
